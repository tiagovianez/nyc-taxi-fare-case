version: '3.8'

x-spark-common: &spark-common
  image: bitnami/spark:latest
  volumes:
    - ./jobs:/opt/bitnami/spark/jobs
  networks:
    - code-with-yu

x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  env_file:
    - airflow.env
  volumes:
    - ./jobs:/opt/airflow/jobs
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - /home/tiagovianez/projects/nyc-taxi-fare-case/nyctaxi/src/main/resources/NycTaxiFare.conf:/opt/airflow/config/NycTaxiFare.conf
    - /home/tiagovianez/projects/nyc-taxi-fare-case-source-data-lake/source/train.csv:/opt/airflow/source_data/source/train.csv
    - /home/tiagovianez/projects/nyc-taxi-fare-case-source-data-lake/source_parquet:/opt/airflow/source_data/source_parquet
    - /home/tiagovianez/projects/nyc-taxi-fare-case-source-data-lake/source/nyc_neighborhoods.csv:/opt/airflow/source_data/source/nyc_neighborhoods.csv
    - /home/tiagovianez/projects/nyc-taxi-fare-case-source-data-lake/data-lake/raw:/opt/airflow/data-lake/raw
    - /home/tiagovianez/projects/nyc-taxi-fare-case-source-data-lake/checkpoints_raw:/opt/airflow/data-lake/checkpoints_raw
    - /home/tiagovianez/projects/nyc-taxi-fare-case-source-data-lake/data-lake/curated:/opt/airflow/data-lake/curated
    - /home/tiagovianez/projects/nyc-taxi-fare-case-source-data-lake/checkpoints_curated:/opt/airflow/data-lake/checkpoints_curated
    - type: bind
      source: /home/tiagovianez/projects/nyc-taxi-fare-case/nyctaxi/target/scala-2.12/nycTaxi-assembly-0.0.1.jar
      target: /opt/airflow/jobs/nycTaxi-assembly-0.0.1.jar

  depends_on:
    - postgres
  networks:
    - code-with-yu

services:
  spark-master:
    <<: *spark-common
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9090:8080"
      - "7077:7077"

  spark-worker:
    <<: *spark-common
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 5
      SPARK_WORKER_MEMORY: 5g
      SPARK_MASTER_URL: spark://spark-master:7077

  postgres:
    image: postgres:14.0
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    networks:
      - code-with-yu

  webserver:
    <<: *airflow-common
    environment:
      - CSV_PATH=${CSV_PATH}
      - PARQUET_PATH=${PARQUET_PATH}
      - NEIGHBORHOOD_PATH=${NEIGHBORHOOD_PATH}
    command: >
      bash -c "airflow db init && airflow webserver"
    ports:
      - "8080:8080"
    depends_on:
      - scheduler


  scheduler:
    <<: *airflow-common
    environment:
      - CSV_PATH=${CSV_PATH}
      - PARQUET_PATH=${PARQUET_PATH}
      - NEIGHBORHOOD_PATH=${NEIGHBORHOOD_PATH}
    command: >
      bash -c "
        airflow db migrate &&
        airflow users create --username admin --firstname Tiago --lastname Vianez --role Admin --email airscholar@gmail.com --password admin &&
        airflow scheduler"
  

  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes

networks:
  code-with-yu: